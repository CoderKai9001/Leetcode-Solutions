#include <bits/stdc++.h>
using namespace std;

// ⠀⠀⠀⠀⠀⠀⢀⠞⡰⠁⠀⡼⠀⠀⠀⣰⠇⣸⡇⠀⠀⠀⠀⠀⠀⠀⢸⠁⠀⠀⠀⠀⡄⣂⠀⢞⡤⡄⠀⣧⠀⠠⡄⠀⠀⠘⡞⠿⠹⣞⢮⠻⡝⢦⠀⠀⠀⠀⠀⠀
// ⠀⢤⣀⣼⣁⣀⡞⡸⠁⠀⢰⠃⠀⠀⠀⠛⢀⠟⠁⠀⠀⢸⡇⠀⠀⠀⣸⠀⠀⠀⠀⢸⢸⠻⠀⠈⠃⡇⠀⢸⠀⠀⢧⠀⠀⠀⢹⡀⠀⠁⠀⢣⡹⡌⠳⡀⠀⠀⠀⠀
// ⠞⠉⠀⣐⠆⠈⠑⠣⡄⠀⡞⠀⠀⠀⠀⠀⣸⠀⠀⠀⠀⣸⠀⠀⠀⠀⡇⠀⠀⠀⠀⢸⠨⠀⠀⠀⠀⢳⠀⢸⡆⠀⢸⠀⠀⠀⠀⡇⠀⠀⠀⠀⢱⡹⡄⠙⣅⠀⠀⠀
// ⠀⠀⠈⠀⠀⠀⠈⠂⡇⢰⠃⠀⠀⠀⠀⠀⡏⠀⠀⠀⢠⣿⠀⠀⠀⢰⡇⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢸⠀⢸⢧⠀⠘⡇⠀⠀⠀⢸⠀⠀⢦⠀⠀⢣⢱⠀⠙⡆⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⡧⡾⠀⠀⠀⠀⠀⠀⡇⠀⠰⢤⣸⡇⠀⠀⠀⡾⢳⠀⠀⠀⠀⠘⡆⠀⠀⠀⠀⢸⠀⢸⢸⠀⠀⣿⣠⠄⠀⢸⠀⠀⢸⠀⠀⡌⡎⣇⡁⠹⡄⠀
// ⠀⠀⠀⠀⠀⠀⠀⢠⠃⡇⠀⠀⠀⠀⠀⠀⡇⠀⠀⠀⡇⡏⠓⠲⢤⣇⣸⡀⠀⠀⠀⠀⡇⠀⠀⠀⠀⡼⣀⣾⣼⡖⠋⡏⡇⠀⠀⢸⠀⠀⠈⡇⠀⢹⣹⢸⢣⠀⢳⠀
// ⣻⠗⠲⢶⣒⡒⠲⡏⢹⠁⠀⠀⠀⠀⠀⠀⣇⠀⠀⢰⠃⢹⠀⠤⢼⠓⠛⣯⠍⠃⠀⠀⢻⡆⠀⠐⡾⡟⢻⠗⠚⡇⢠⠇⢹⠀⠀⢸⠀⠀⠀⣷⠀⢸⡏⡎⣟⠀⠈⠃
// ⠀⠠⠚⠁⠀⠈⡇⢱⣼⠀⠀⠀⠀⠀⠀⠀⣿⠀⠀⢸⣠⣼⣒⠾⢽⣒⡲⢼⡄⠀⠀⠀⠸⡇⠀⠀⣸⡵⣞⡭⠬⣯⣺⠤⠘⡄⠀⢸⠀⠀⢀⢹⠀⢸⢸⠇⡇⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠁⢸⡽⠀⠀⠀⠀⠀⠀⠀⡟⡆⣠⢿⣋⢭⣷⠖⢾⣦⣝⣷⠽⡄⠀⠀⠀⣇⠀⢀⣿⣿⣵⣶⡶⡷⣾⡙⢆⡇⠀⣿⡇⠀⢸⢸⠀⣸⠘⡄⣿⠀⠀⠀
// ⠀⠀⠀⠀⢀⣠⠆⢸⡇⠀⠀⠀⠀⠀⠀⠀⡇⣹⣣⢾⢱⣋⣾⣄⣸⠈⣧⠙⠂⠹⡄⠀⠀⢸⡄⠘⡿⢱⣣⣾⣿⣿⢹⡙⣎⣷⢰⡇⣇⠀⡼⡞⢀⡏⠀⣿⡇⠀⠀⠀
// ⠤⣀⣈⣀⡤⠴⠒⠁⡇⠀⠀⠀⠀⠀⠀⠀⡇⣇⣿⣸⣞⣩⣿⣷⣿⢭⣹⠀⠀⠀⠙⢦⠀⠀⢧⡞⠁⣾⣭⣿⣿⡯⣽⠇⢸⣾⡾⠀⢸⢠⠇⠁⡼⠀⠀⡟⡇⠀⠀⠀
// ⠀⠀⠀⢀⡇⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢀⡇⠹⠆⠻⢹⡃⠙⠻⢟⠀⡿⠀⠀⠀⠀⢠⢗⣄⡈⣇⠀⢹⣀⠙⠯⡄⡿⠀⠘⢸⡇⠀⢸⡎⢀⣼⡇⠀⠀⠀⠈⠀⠀⠀
// ⠀⠀⠀⢸⠁⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢸⠇⠀⠀⠀⠀⠙⠚⠀⠘⠚⠁⠀⠀⠀⢠⠿⠋⠀⠙⠺⠆⠀⠙⠒⠒⠊⠀⠀⠀⣼⠀⠀⢸⠀⠈⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠈⢺⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡇⣰⠆⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⣰⢿⠀⠀⠀⠀⡇⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⡰⠃⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠉⢸⠀⠀⠀⢠⡇⠀⠀⠀⠀⠀⠀⢸⣧⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠁⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⡼⠀⠀⠀⢸⡇⠀⠀⠀⠀⠀⠀⢸⡇⡷⣄⠀⠀⠀⠀⠀⠀⠀⠀⠠⠖⠦⠤⠤⠀⠤⠠⠀⠀⠀⠀⠀⠀⠀⢀⠜⢹⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⡇⠀⠀⠀⢸⢧⠀⢰⠀⠀⠀⠀⠀⣇⡇⢨⠗⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠞⡇⠀⢸⠀⠀⠀⠀⠀⠀⣿⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⡀⡇⠀⠀⠀⡏⢸⠀⢰⠀⠀⠀⠀⠀⣿⣁⡼⠤⠖⢻⠢⢄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡤⠚⡟⠀⠀⡇⠀⢸⠀⠀⠀⠀⠀⢀⢹⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⢃⠇⠀⠀⢀⡇⢸⠀⠚⡆⠀⠀⠀⠀⣿⠹⡀⠀⠀⢸⠀⠀⠉⠓⠦⣄⡀⠀⠀⠀⠀⣀⡴⠚⠉⠉⣳⢧⡀⠀⡇⠀⢸⠀⠀⠀⠀⠀⢸⢸⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⢼⠀⠀⠀⢸⠀⠈⡆⢸⣇⠀⠀⠀⠀⣷⠀⠈⠓⠢⠼⣄⣀⣀⠀⠀⠈⠙⠻⢶⣶⣿⢿⣡⠤⠖⠊⠁⢸⠃⠀⡇⠀⢸⠀⠀⠀⠀⡇⣸⢸⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⣸⠀⠀⠀⡞⠀⠀⡇⠈⣿⡀⠀⠀⠀⣿⡆⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠒⠢⢄⣀⡴⠋⠀⠀⠀⠀⠀⡾⠀⠀⢻⠀⢸⠀⠀⠀⢸⠁⡇⢸⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⠈⡇⠀⠀⢰⠃⣀⣀⣳⠀⣧⣇⠀⠀⠀⢹⢽⠄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⠀⠀⠀⠀⠀⠀⢰⣋⡉⠳⣼⣤⣼⠀⠀⠀⣼⢠⡇⢸⡇⠀⠀⠀⠀⠀⠀⠀
// ⠀⢠⠃⣠⡶⠟⠛⢉⣉⣹⡄⢻⣘⡆⠀⠀⢸⠀⠈⠲⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⢀⡏⠁⠙⢦⣀⣀⣸⠀⠀⢠⡟⢸⠙⠻⣅⠀⠀⠀⠀⠀⠀⠀
// ⠀⣸⡾⠋⢀⠔⠋⠁⠀⠀⣇⢸⠀⠸⡄⠀⢸⡀⠀⠘⢮⡙⠢⢄⡀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⣠⢆⡄⠀⠀⠀⠀⠀⡇⠀⢀⡏⡇⡏⠑⢦⡈⢷⡀⠀⡀⠀⠀⠀
// ⢠⡿⠁⡴⠃⠀⠀⠀⠀⠀⢸⣼⠀⠀⠹⡄⠘⡇⠀⠀⠀⠙⠢⣄⠈⠙⠲⠤⠄⠀⠀⢩⠀⠀⣠⠞⡵⡻⠃⠀⠀⠀⠀⠀⡇⢠⠎⠀⣷⠁⠀⠀⠙⢦⠻⡀⠀⠀⠀⠀
// ⡿⠁⡼⠁⠀⠀⠀⡆⠀⠀⠀⠻⠀⠀⠀⠹⣄⡇⠀⠀⠀⠀⠀⠈⠓⢤⡀⠀⠀⠀⠀⠈⡇⠉⠀⢼⠜⠁⠀⠀⠀⠀⠀⢸⡵⠋⠀⠸⠏⠀⠀⠀⢠⡌⢣⢳⡇⠀⠀⠀
// ⠁⡼⠁⠀⠀⠀⠀⢳⠀⠀⠀⠀⠀⠀⠀⠀⠘⠃⠀⠀⠀⠀⠀⠀⠀⠀⠈⠳⢤⡀⠀⢸⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⢰⠀⠀⠀⢸⠀⠀⢣⢧⠀⠀⠀
// ⠐⠃⠀⡀⠀⠀⠀⠘⡆⠀⠀⢀⠇⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⡆⠀⠀⢸⠀⠀⠈⢿⡆⠀⠀
// ⠀⠀⠀⢻⠀⠀⠀⠀⢷⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢸⠀⠀⢀⠘⣿⡀⠀
// ⠀⠀⠀⠈⣇⠀⠀⠀⢸⡀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⡏⠀⢀⡏⠀⢹⣇⠀

class Solution {
public:
    int findPeakElement(vector<int>& nums) {
        if(nums.size() == 1) return 0;
        int start = 0, mid, end = nums.size() - 1;
        while(start <= end) {
            mid = (start+end)/2;
            if(mid != 0 && mid != nums.size()-1 && nums[mid-1] < nums[mid] && nums[mid] > nums[mid+1]) return mid;
            else if(mid == 0 && nums[mid] > nums[mid+1]) return mid;
            else if(mid == nums.size()-1 && nums[mid] > nums[mid-1]) return mid;
            (nums[mid] < nums[mid+1]) ? start = mid+1 : end = mid-1;
        }
        return -1;
    }
};

int main() {
    Solution s;
    vector<int> nums = {1,2,3,1};
    cout << s.findPeakElement(nums) << endl;
    return 0;
}