#include <bits/stdc++.h>
using namespace  std;

//! ⠛⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⠀⠀⣠⡹⣒⣃⢃⠞⠀⠀⠀⠀⠀⠀⠀⠀⠤⢸⣿⢼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣶⡀⠊⠄⠀⠀⠀⠡⠈⠤⠀⠀
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠆⢄⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⡠⠂⠁⠧⠋⠊⠀⠀⡀⠄⣐⣪⣥⣴⣶⣿⣿⡿⣿⠛⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡯⡾⡢⢀⠀⠀⠀⠀⠀⠀⠆⠔
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠂⠀⠀⠀⣿⣿⣿⣿⣿⣿⠜⠀⠀⠀⠀⡀⢔⣠⣴⣾⠿⠟⠛⢉⡠⠔⣋⠀⠠⣿⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡪⠠⡈⠄⠀⠀⠀⠀⠀⠀⠐
//! ⠀⠀⠀⠀⠐⠂⡰⠄⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⠀⠀⠠⢐⣬⣾⡿⠛⠉⠀⠀⠀⠔⠋⠐⣬⠶⠾⡛⡏⢹⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠿⣿⣿⣿⣿⣿⡎⡪⡊⢀⠀⠀⠀⠀⠀⠀⠀
//! ⢀⠀⠀⠀⠀⡁⠀⠂⠀⠀⠀⠀⠀⠀⠐⣿⣿⣿⣿⣿⣿⡦⣪⣾⡿⠛⣁⠀⠀⠀⠀⠀⠀⠐⡄⠌⣸⣲⣡⠷⡗⠓⢸⣿⣿⣿⣿⣿⣿⣿⣿⡏⢀⠒⢊⣿⣿⣿⣿⡯⠊⢀⠜⠀⠀⠀⠀⠀⠀⠀
//! ⠈⣠⣤⣀⣬⣂⠀⠀⠀⠀⠀⠀⡀⠀⠀⣿⣿⣿⣿⣿⣿⣿⠿⠓⠚⢉⣁⢈⠐⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠁⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⡇⡁⠀⠠⢸⣿⣿⣿⡇⠀⠁⠀⠁⠀⠀⠀⠀⠀⠀
//! ⣿⣿⣿⣿⣿⣿⣷⡄⠀⠀⠀⠈⠀⠀⠁⣿⣿⣿⣿⣿⡟⣿⢀⣴⡼⠖⢖⠲⠄⡇⠀⠀⠀⠀⠈⠐⠀⡀⠀⠸⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⠉⠄⠀⢺⣿⣿⣿⣗⠀⠔⡠⣃⠀⠀⢀⠀⠀⠀
//! ⣿⣿⣿⣿⣿⣿⣿⣷⠀⠀⠀⠀⠀⠀⠑⣿⣿⣿⣿⣿⡇⢿⣾⢻⡡⣯⠟⠊⠈⠇⠀⠀⠀⠀⠀⠀⠀⠀⠑⢄⠀⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡇⠂⡏⢰⣾⣿⣿⣿⣇⣡⡺⢛⣻⠔⡀⣄⣢⠀⠀
//! ⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣿⠘⣿⠖⠋⠀⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠢⡀⣿⣿⣿⣿⣿⣿⣿⣿⡇⢀⡇⢸⣿⣿⣿⣿⣿⣿⣿⣾⣿⣖⡐⠐⠀⠁⠀
//! ⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠀⠀⠐⢸⣿⣿⣿⣿⣿⣇⢹⡄⠀⠀⠀⡀⠐⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣿⣿⣿⣿⣿⡗⠅⠃⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣄⠀
//! ⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⡀⢣⠀⠀⢠⠀⠀⠱⡈⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⡇⠀⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇
//! ⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⠀⠀⠀⠀⠀⠀⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⡏⣿⣿⣿⣿⣿⣿⣿⣾⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏
//! ⣿⣿⣿⣿⣿⣿⡟⡯⠇⠉⠀⠀⡀⠀⠀⠀⢿⡏⣿⣿⣿⣿⣿⡆⠀⠀⠐⠀⠀⠀⠀⠀⢀⡠⠄⠒⠒⠀⠒⠂⠀⠀⠀⢸⡇⣿⣿⣿⣿⣿⣿⣿⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡜
//! ⣿⣿⣿⣿⣿⡟⠀⠀⠈⠀⠀⠈⠀⠀⠀⠀⠸⡇⢻⣿⣿⣿⣿⣿⡆⠀⠀⠀⠀⠀⠀⠌⠀⢀⠄⠀⠒⠀⠀⠀⠀⠀⠀⢸⠀⢹⣿⣿⣿⣸⣿⣿⠇⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠊
//! ⣿⣻⠿⠛⠁⠀⡕⠀⠀⠀⢠⡇⠂⠀⠀⠀⠀⣇⠘⣿⣿⣿⣿⣿⣿⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣏⠹⣿⠺⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⠣
//! ⠁⠀⠀⢠⠀⡀⠀⠀⠀⠀⣾⣧⢰⠀⠀⠀⠀⠸⠀⢹⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⢇⠊⢿⢱⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⡀
//! ⠀⠀⠀⢸⠈⠀⠀⠀⠀⢀⣿⣿⠘⠀⠀⠀⠀⠀⠀⠀⣿⣿⠸⣿⣿⡿⣿⡗⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣔⠟⠋⣿⣟⠁⠀⠀⢸⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡓⢅
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⡆⣀⣀⡀⠀⠀⠀⠀⠘⣿⣄⣹⣿⣧⢻⡇⠁⠀⣄⠀⠀⠀⠀⠀⠀⣀⣀⣤⡾⢾⡴⠋⠀⠀⣿⠇⠀⠀⠀⠈⠀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢨⠢
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⡇⢠⠀⠉⠉⠉⠉⠉⠉⢻⡇⠀⢻⣿⠀⢃⠀⠀⠘⢷⣦⣤⡶⣦⡿⣛⠭⠷⠀⡫⣢⠖⡰⢢⠘⠀⠀⠀⠀⡄⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣯⣷⣿⣷
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⠀⠀⢻⡄⠀⠀⠀⠀⠈⢻⣿⣎⡇⣶⢹⢆⢇⢄⢑⣉⠆⠡⠁⠀⠀⡠⠶⡡⡇⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
//! ⡄⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣿⣿⡇⠇⠀⠀⠀⠀⠀⠀⠀⠘⠀⠀⠈⢇⠀⠀⠀⢠⢞⢂⡙⢿⠲⠳⠹⠬⠚⠈⠁⠀⠐⣀⠠⠀⠈⣀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
//! ⠛⠄⠀⠀⠀⠀⠀⠀⠀⠀⠸⣿⣿⣿⢨⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡴⣡⠡⠖⠞⠘⢀⠤⡀⢀⣀⢄⠤⠦⠘⠂⠀⠉⠁⠀⠀⢀⠃⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣿⣿⣇⠇⠀⠀⠐⠠⣀⠀⠀⠀⠀⠀⠀⠀⡡⣀⣜⠕⠥⠤⠤⣋⠎⠊⠠⠊⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡜⢀⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
//! ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⣿⣿⣴⠀⠀⠀⠀⠀⠀⠉⠐⠒⠮⣌⠾⠾⠛⠒⠤⠀⢈⠀⠀⠀⠀⠁⠀⠀⢀⣀⣀⣤⣤⣶⣾⣿⣿⠇⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿

class Solution {
public:
    int findKthLargest(vector<int>& nums, int k) {
        priority_queue<int> pq;
        for(auto it = nums.begin(); it < nums.end(); it++) pq.push(*it);
        while(k != 1 && k--) pq.pop();
        return pq.top();
    }
};

int main() {

    return 0;
}